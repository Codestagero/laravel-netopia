<?php

namespace Codestage\Netopia\Services;

use Codestage\Netopia\Contracts\PaymentService;
use Codestage\Netopia\Entities\EncryptedPayment;
use Codestage\Netopia\Models\Payment;
use Exception;
use Illuminate\Support\Facades\{Config};
use Netopia\Payment\Invoice;
use Netopia\Payment\Request\Card;

/**
 * @template TBillable
 * @extends PaymentService<TBillable>
 */
class DefaultPaymentService extends PaymentService
{
    /**
     * Execute a Netopia payment.
     *
     * @param Payment $payment
     * @throws Exception
     * @return EncryptedPayment
     */
    public function generateEncryptedPayment(Payment $payment): EncryptedPayment
    {
        $paymentRequest = new Card();
        $paymentRequest->signature = Config::get('netopia.signature'); //signature - generated by mobilpay.ro for every merchant account
        $paymentRequest->orderId = $payment->getKey(); // order_id should be unique for a merchant account
        $paymentRequest->confirmUrl = 'https://example.test/card/success'; // is where mobilPay redirects the client once the payment process is finished and is MANDATORY
        $paymentRequest->returnUrl = 'https://example.test/ipn'; // is where mobilPay will send the payment result and is MANDATORY

        // Invoices info
        $paymentRequest->invoice = new Invoice();
        $paymentRequest->invoice->currency = $payment->currency;
        $paymentRequest->invoice->amount = (string) $payment->amount;
        $paymentRequest->invoice->tokenId = null;
        $paymentRequest->invoice->details = $payment->description;

        $billable = $payment->billable();

        if (method_exists($billable, 'netopiaAddress')) {
            // Billing Info
            $paymentRequest->invoice->setBillingAddress($billable->netopiaAddress());

            // Shipping
            $paymentRequest->invoice->setShippingAddress($billable->netopiaAddress());
        }

        // encrypting
        $paymentRequest->encrypt($this->certificatePath);

        /**
         * Send the following data to NETOPIA Payments server
         * Method : POST
         * URL : $paymentUrl.
         */
        $envKey = $paymentRequest->getEnvKey();
        $data = $paymentRequest->getEncData();

        return new EncryptedPayment($this->baseUrl, $envKey, $data, );
    }
}
